plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'androidx.navigation.safeargs.kotlin'
    id 'org.sonarqube'
}

android {
    compileSdk 31

    defaultConfig {
        applicationId "com.example.myweatherapplication"
        minSdk 21
        targetSdk 31
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "com.example.myweatherapplication.HiltTestRunner"

        Properties properties  = new Properties()
        properties.load(project.rootProject.file("local.properties").newDataInputStream())

        buildConfigField "String","API_KEY","\"${properties.getProperty("API_KEY")}\""

    }
    android {

        packagingOptions {
            exclude("META-INF/DEPENDENCIES")
            exclude("META-INF/LICENSE/ASM")
            exclude("META-INF/LICENSE.txt")
            exclude("META-INF/license.txt")
            exclude("META-INF/licenses/ASM")
            exclude("META-INF/NOTICE")
            exclude("META-INF/NOTICE.txt")
            exclude("META-INF/notice.txt")
            exclude 'META-INF/AL2.0'
            exclude 'META-INF/LGPL2.1'
            exclude("META-INF/ASL2.0")
            exclude("META-INF/*.kotlin_module")
            exclude("win32-x86/attach_hotspot_windows.dll")
            exclude("win32-x86-64/attach_hotspot_windows.dll")

        }
    }


    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }


    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildFeatures {
        viewBinding true
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.2'

    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'


    // Material Design
    implementation 'com.google.android.material:material:1.6.0-alpha02'

    // Architectural Components
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.4.0"

    // Room
    implementation "androidx.room:room-runtime:2.4.3"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    kapt "androidx.room:room-compiler:2.4.3"

    // Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:2.4.3"

    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'

    // Coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.5.2'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.5.2'

    // Coroutine Lifecycle Scopes
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.4.0"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.4.0"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:2.4.0"
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:2.4.0"

    implementation "androidx.activity:activity-ktx:1.4.0"
    implementation "androidx.fragment:fragment-ktx:1.4.1"
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.4.1'

    // Navigation Components
    implementation "androidx.navigation:navigation-fragment-ktx:2.3.5"
    implementation "androidx.navigation:navigation-ui-ktx:2.3.5"
    implementation 'androidx.navigation:navigation-dynamic-features-fragment:2.3.5'

    implementation 'com.airbnb.android:lottie:4.2.0'

    // Glide
   // implementation 'com.github.bumptech.glide:glide:4.12.0'
 //   kapt 'com.github.bumptech.glide:compiler:4.12.0'

    dependencies {
        implementation 'com.squareup.picasso:picasso:2.71828'
    }


    // Google Maps Location Services
    implementation 'com.google.android.gms:play-services-location:21.0.0'
    implementation 'com.google.android.gms:play-services-maps:18.0.2'


    //implementation 'com.google.android.gms:play-services-location:17.0.0'



    //Activity KTX for viewModels()
    implementation "androidx.activity:activity-ktx:1.4.0"


    // Dagger Core
    implementation "com.google.dagger:dagger:2.39.1"
    annotationProcessor "com.google.dagger:dagger-compiler:2.39.1"

    // Dagger Android
    api 'com.google.dagger:dagger-android:2.35.1'
    api 'com.google.dagger:dagger-android-support:2.28.1'
    annotationProcessor 'com.google.dagger:dagger-android-processor:2.23.2'

    //Dagger-Hilt

    implementation "com.google.dagger:hilt-android:2.39.1"
    annotationProcessor "com.google.dagger:hilt-android-compiler:2.39.1"

    implementation "androidx.hilt:hilt-lifecycle-viewmodel:1.0.0-alpha03"
    annotationProcessor "androidx.hilt:hilt-compiler:1.0.0"
    // Easy Permissions
    implementation 'pub.devrel:easypermissions:3.0.0'

    // Timber
    implementation 'com.jakewharton.timber:timber:4.7.1'

    // MPAndroidChart
    implementation 'com.github.PhilJay:MPAndroidChart:v3.1.0'

    implementation 'android.arch.lifecycle:extensions:1.1.1'


    // Architectural Components
    // implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.4.0"

    // Coroutines
    //implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.5.2'
    //implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.5.2'

    // Coroutine Lifecycle Scopes
    //  implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.4.0"
    //implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.4.0"

    implementation "com.ogaclejapan.smarttablayout:library:2.0.0@aar"
    implementation "com.ogaclejapan.smarttablayout:utils-v4:2.0.0@aar"

    implementation 'com.intuit.sdp:sdp-android:1.1.0'

    implementation 'com.google.android.libraries.places:places:3.1.0'
    implementation 'com.karumi:dexter:5.0.0'




    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'

    // Local Unit Tests
    implementation "androidx.test:core:1.5.0"
    testImplementation "junit:junit:4.13.2"
    testImplementation "androidx.arch.core:core-testing:2.1.0"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.5.1"
    testImplementation "com.google.truth:truth:1.1.3"
    //testImplementation "org.mockito:mockito-core:2.23.4"


    // Instrumented Unit Tests
    androidTestImplementation "junit:junit:4.13.2"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.5.1"
    androidTestImplementation "androidx.arch.core:core-testing:2.1.0"
    androidTestImplementation "com.google.truth:truth:1.1.3"
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation "org.mockito:mockito-core:3.12.4"
    androidTestImplementation 'com.google.dagger:hilt-android-testing:2.37'
    kaptAndroidTest 'com.google.dagger:hilt-android-compiler:2.39.1'
    debugImplementation "androidx.fragment:fragment-testing:1.3.0-alpha08"

    androidTestImplementation"net.bytebuddy:byte-buddy:1.9.10"

    androidTestImplementation "net.bytebuddy:byte-buddy-agent:1.9.10"

    androidTestImplementation "net.bytebuddy:byte-buddy-android:1.9.7"


    //  testImplementation "androidx.arch.core:core-testing:2.1.0"
 //   androidTestImplementation "androidx.arch.core:core-testing:2.1.0"

    testImplementation 'com.squareup.okhttp3:mockwebserver:4.9.0'

    testImplementation 'org.mockito:mockito-core:3.12.4'
    testImplementation 'org.mockito:mockito-inline:3.12.4'
    testImplementation 'com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0'


    sonarqube {
        properties {
            property "sonar.projectKey", "MyWeatherApplicationApp" // No spaces or special characters
            property "sonar.organization", "seethaindiran" // Replace with your organization key
            property "sonar.host.url", "https://sonarcloud.io"
            property "sonar.login", System.getenv("SONAR_TOKEN") // Token from GitHub secrets
        }
    }
}