
name: CI
on:

  push: 
    branches: [  master ]
  pull_request:
    branches: [ master ]


   
jobs:
  lint:
     
     runs-on: ubuntu-latest
     steps:
          - name: Checkout the code
            uses: actions/checkout@v4

           

          - name: Set up JDK 17
            uses: actions/setup-java@v2
            with:
                distribution: 'zulu' 
                java-version: '17'

          - name: Set up Android SDK
            uses: android-actions/setup-android@v2
            with:
                 api-level: 30
                 build-tools: "30.0.3"

          - name: Create local.properties
            run: echo "sdk.dir=/usr/local/lib/android/sdk" > $GITHUB_WORKSPACE/local.properties      

          - name: Grant execute permission for gradlew
            run: chmod +x ./gradlew

          - name: Run lint
            run: ./gradlew lintDebug
         
          - name: Upload html test report
            uses: actions/upload-artifact@v4
            with:
                 name: index.html
                 path: app/build/reports/lint-results-debug.html

  unit-test:
     needs: [lint]
     runs-on: ubuntu-latest
     steps:
         - name: Checkout the code
           uses: actions/checkout@v4

             

         - name: Set up JDK 17
           uses: actions/setup-java@v2
           with:
                distribution: 'zulu' 
                java-version: '17'

         - name: Set up Android SDK
           uses: android-actions/setup-android@v2
           with:
               api-level: 30
               build-tools: "30.0.3"  

         - name: Create local.properties
           run: echo "sdk.dir=/usr/local/lib/android/sdk" > $GITHUB_WORKSPACE/local.properties     

         - name: Grant execute permission for gradlew
           run: chmod +x ./gradlew  

         - name: Run tests
           run: ./gradlew test

         - name: Upload test report
           uses: actions/upload-artifact@v4
           with:
                 name: unit_test_report
                 path: app/build/reports/tests/testDebugUnitTest/

  instrumentation-test:
    needs: [unit-test]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v4  

         

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
            distribution: 'zulu' 
            java-version: '17'

      - name: Set up Android SDK
        uses: android-actions/setup-android@v2
        with:
            api-level: 29
            build-tools: "29.0.3" 
        

      - name: Create local.properties
        run: echo "sdk.dir=/usr/local/lib/android/sdk" > $GITHUB_WORKSPACE/local.properties     

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew   

      - name: Start emulator and run tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
            api-level: 29
            target: google_apis
            arch:  x86_64 
            emulator-boot-timeout: 900
            disable-animations: true
            script: |
             adb -s emulator-5554 wait-for-device
             ./gradlew connectedDebugAndroidTest

      - name: Upload instrumentation test report
        uses: actions/upload-artifact@v4
        with:
            name: instrumentation_test_report
            path: app/build/reports/androidTests/connected/

 





  static-code-analysis:
     needs: [instrumentation-test]
     runs-on: ubuntu-latest
     steps:
       - name: Checkout the code
         uses: actions/checkout@v4   

        

       - name: Set up JDK 17
         uses: actions/setup-java@v2
         with:
          java-version: 17
          distribution: 'temurin'  # specify the distribution
          java-package: jdk
          architecture: x64

       - name: Set up Android SDK
         uses: android-actions/setup-android@v2
         with:
          api-level: 29
          build-tools: "29.0.3"

       - name: Grant execute permission for gradlew
         run: chmod +x ./gradlew

       - name: Create empty local.properties
         run: touch local.properties   

       - name: SonarCloud Scan
         run: ./gradlew app:sonarqube -Dsonar.login=${{ secrets.SONAR_TOKEN }}
         env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  package:
     needs: [ static-code-analysis ]
     name: Generate APK & Upload to Firebase
     runs-on: ubuntu-latest
     steps:
      - name: Checkout the code
        uses: actions/checkout@v4

      

      - name: Set up JDK 17 (Zulu)
        uses: actions/setup-java@v2
        with:
             java-version: '17'  # Just specify '8' for JDK 8
             java-package: jdk
             architecture: x64
             check-latest: false
             distribution: 'zulu'  # Zulu OpenJDK distribution

      - name: Set up Android SDK
        uses: android-actions/setup-android@v2
        with:
            api-level: 30
            build-tools: 30.0.3"        

      - name: Create local.properties file
        run: echo "sdk.dir=$ANDROID_HOME" > local.properties
        env:
          ANDROID_HOME: /opt/hostedtoolcache/Android/sdk  # Path to Android SDK in the GitHub runner
      
      - name: Grant execute permissions to gradlew
        run: chmod +x ./gradlew  # Grant execute permissions to gradlew

      - name: Build debug APK
        run: ./gradlew assembleDebug --stacktrace

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
         name: app-release.apk
         path: app/build/outputs/apk/release/app-release.apk  

      - name: Clean & Build APK
        run: |
         ./gradlew clean
         ./gradlew assembleRelease

      - name: Check APK File Existence
        run: ls -R app/build/outputs/apk/release/    

      - name: Upload to Firebase App Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
         appId: ${{ secrets.FIREBASE_APP_ID }}
         serviceCredentialsFileContent: ${{ secrets.CREDENTIAL_FILE_CONTENT }}
         groups: testers  # Define your Firebase tester group
         releaseNotes: "New build from GitHub Actions CI/CD"
         file: app/build/outputs/apk/release/app-release.apk       
