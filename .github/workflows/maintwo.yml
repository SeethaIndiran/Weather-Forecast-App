name: CI
on:

  push: 
    branches: [  master ]
  pull_request:
    branches: [ master ]


   
jobs:
  lint:
     
     runs-on: ubuntu-latest
     steps:
          - name: Checkout the code
            uses: actions/checkout@v4

          - name: Set up JDK 17
            uses: actions/setup-java@v2
            with:
               distribution: 'zulu' 
               java-version: '17'

          - name: Set up Android SDK
            uses: android-actions/setup-android@v2
            with:
               api-level: 30
               build-tools: "30.0.3"

          - name: Create local.properties
            run: echo "sdk.dir=/usr/local/lib/android/sdk" > $GITHUB_WORKSPACE/local.properties      

          - name: Grant execute permission for gradlew
            run: chmod +x ./gradlew

          - name: Run lint
            run: ./gradlew lintDebug
         
          - name: Upload html test report
            uses: actions/upload-artifact@v4
            with:
               name: index.html
               path: app/build/reports/lint-results-debug.html
  
  unit-test:
     needs: [lint]
     runs-on: ubuntu-latest
     steps:
         - name: Checkout the code
           uses: actions/checkout@v4

         - name: Set up JDK 17
           uses: actions/setup-java@v2
           with:
              distribution: 'zulu' 
              java-version: '17'

         - name: Set up Android SDK
           uses: android-actions/setup-android@v2
           with:
             api-level: 30
             build-tools: "30.0.3"  

         - name: Create local.properties
           run: echo "sdk.dir=/usr/local/lib/android/sdk" > $GITHUB_WORKSPACE/local.properties     

         - name: Grant execute permission for gradlew
           run: chmod +x ./gradlew  

         - name: Run tests
           run: ./gradlew test

         - name: Upload test report
           uses: actions/upload-artifact@v4
           with:
               name: unit_test_report
               path: app/build/reports/tests/testDebugUnitTest/
 
  instrumentation-test:
    needs: [unit-test]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu' 
          java-version: '17'

      - name: Set up Android SDK
        uses: android-actions/setup-android@v2
        with:
          api-level: 29
          build-tools: "29.0.3" 
        

      - name: Create local.properties
        run: echo "sdk.dir=/usr/local/lib/android/sdk" > $GITHUB_WORKSPACE/local.properties     

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew   

      - name: Start emulator and run tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 29
          target: google_apis
          arch:  x86_64 
          emulator-boot-timeout: 900
          disable-animations: true
          script: |
            adb -s emulator-5554 wait-for-device
            ./gradlew connectedDebugAndroidTest

      - name: Upload instrumentation test report
        uses: actions/upload-artifact@v4
        with:
          name: instrumentation_test_report
          path: app/build/reports/androidTests/connected/

  static-code-analysis:
    needs: [ instrumentation-test ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v4

      - name: set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: 17
          distribution: 'temurin'  # specify the distribution (e.g., 'temurin' for AdoptOpenJDK)
          java-package: jdk
          architecture: x64

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Set up Android SDK
        env:
          ANDROID_HOME: /usr/local/lib/android/sdk
          ANDROID_SDK_ROOT: /usr/local/lib/android/sdk

      - name: SonarCloud Scan
        run: ./gradlew app:sonarqube -Dsonar.login=${{ secrets.TOKEN }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  package:
    needs: [ static-code-analysis ]
    name: Generate APK
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v2

      - name: set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Build debug APK
        run: ./gradlew assembleDebug --stacktrace

      - name: Upload APK
        uses: actions/upload-artifact@v2
        with:
          name: expense-manager.apk
          path: app/build/outputs/apk/debug/app-debug.apk

  static-code-analysis:
    needs: [instrumentation-test]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v4
    
      - name: set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: 17
          distribution: 'temurin'  # specify the distribution (e.g., 'temurin' for AdoptOpenJDK)
          java-package: jdk
          architecture: x64

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew 

      - name: Set up Android SDK
        env:
           ANDROID_HOME: /usr/local/lib/android/sdk
           ANDROID_SDK_ROOT: /usr/local/lib/android/sdk   

      - name: SonarCloud Scan
        run: ./gradlew app:sonarqube -Dsonar.login=${{ secrets.TOKEN }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}     

  package:
    needs: [static-code-analysis]
    name: Generate APK
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v2

      - name: set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Build debug APK
        run: ./gradlew assembleDebug --stacktrace

      - name: Upload APK
        uses: actions/upload-artifact@v2
        with:
          name: expense-manager.apk
          path: app/build/outputs/apk/debug/app-debug.apk         

    
